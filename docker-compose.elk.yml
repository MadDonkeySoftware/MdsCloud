version: '3.7'
# Reference: https://github.com/deviantony/docker-elk

services:

  # The 'setup' service runs a one-off script which initializes users inside
  # Elasticsearch — such as 'logstash_internal' and 'kibana_system' — with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: docker-compose-support-files/setup/
      args:
        ELK_VERSION: 8.6.2
    init: true
    volumes:
      - ./docker-compose-support-files/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./docker-compose-support-files/setup/lib.sh:/lib.sh:ro,Z
      - ./docker-compose-support-files/setup/roles:/roles:ro,Z
      - ./docker-compose-support-files/setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-changeme}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-changeme}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-changeme}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-changeme}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-changeme}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-changeme}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-changeme}
    networks:
      - app
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: docker-compose-support-files/elasticsearch/
      args:
        ELK_VERSION: 8.6.2
    restart: always
    volumes:
      - type: bind
        source: ./docker-compose-support-files/elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
    logging:
      driver: "none"
    networks:
      - app

  logstash:
    build:
      context: docker-compose-support-files/logstash/
      args:
        ELK_VERSION: 8.6.2
    restart: always
    volumes:
      - type: bind
        source: ./docker-compose-support-files/logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./docker-compose-support-files/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "6000:6000"
      - "6001:6001"
      - "6002:6002"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    logging:
      driver: "none"
    networks:
      - app

  kibana:
    build:
      context: docker-compose-support-files/kibana/
      args:
        ELK_VERSION: 8.6.2
    restart: always
    volumes:
      - type: bind
        source: ./docker-compose-support-files/kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - logstash
      - elasticsearch
    logging:
      driver: "none"
    networks:
      - app

networks:
  app:

volumes:
  elasticsearch:
